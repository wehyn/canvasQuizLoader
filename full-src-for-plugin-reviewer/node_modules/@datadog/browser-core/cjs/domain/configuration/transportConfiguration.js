"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.computeTransportConfiguration = computeTransportConfiguration;
exports.isIntakeUrl = isIntakeUrl;
const endpointBuilder_1 = require("./endpointBuilder");
const tags_1 = require("./tags");
const intakeSites_1 = require("./intakeSites");
function computeTransportConfiguration(initConfiguration) {
    const site = initConfiguration.site || intakeSites_1.INTAKE_SITE_US1;
    const tags = (0, tags_1.buildTags)(initConfiguration);
    const endpointBuilders = computeEndpointBuilders(initConfiguration, tags);
    const replicaConfiguration = computeReplicaConfiguration(initConfiguration, tags);
    return {
        replica: replicaConfiguration,
        site,
        ...endpointBuilders,
    };
}
function computeEndpointBuilders(initConfiguration, tags) {
    return {
        logsEndpointBuilder: (0, endpointBuilder_1.createEndpointBuilder)(initConfiguration, 'logs', tags),
        rumEndpointBuilder: (0, endpointBuilder_1.createEndpointBuilder)(initConfiguration, 'rum', tags),
        sessionReplayEndpointBuilder: (0, endpointBuilder_1.createEndpointBuilder)(initConfiguration, 'replay', tags),
    };
}
function computeReplicaConfiguration(initConfiguration, tags) {
    if (!initConfiguration.replica) {
        return;
    }
    const replicaConfiguration = {
        ...initConfiguration,
        site: intakeSites_1.INTAKE_SITE_US1,
        clientToken: initConfiguration.replica.clientToken,
    };
    const replicaEndpointBuilders = {
        logsEndpointBuilder: (0, endpointBuilder_1.createEndpointBuilder)(replicaConfiguration, 'logs', tags),
        rumEndpointBuilder: (0, endpointBuilder_1.createEndpointBuilder)(replicaConfiguration, 'rum', tags),
    };
    return { applicationId: initConfiguration.replica.applicationId, ...replicaEndpointBuilders };
}
function isIntakeUrl(url) {
    // check if tags is present in the query string
    return intakeSites_1.INTAKE_URL_PARAMETERS.every((param) => url.includes(param));
}
//# sourceMappingURL=transportConfiguration.js.map